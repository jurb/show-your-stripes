{
  "version": 3,
  "file": "bundle.css",
  "sources": [
    "../src/App.svelte",
    "../src/Modal.svelte"
  ],
  "sourcesContent": [
    "<script>\n  import tiles from \"./tiles.js\";\n\n  const rows = Array.from(new Set(tiles.map(el => el.row)));\n  const columns = Array.from(new Set(tiles.map(el => el.column)));\n\n  let selected = \"\";\n\n  const selectCountry = function(el, country) {\n    selected = country;\n  };\n\n  import Modal from \"./Modal.svelte\";\n\n  let showModal = false;\n</script>\n\n<style>\n  .centered {\n    display: flex;\n    position: relative;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .country-row {\n    display: grid;\n    grid-template-columns: repeat(31, 34px);\n    grid-template-rows: repeat(23, 34px);\n    grid-gap: 3px;\n    border: 1px solid rgba(0, 0, 0, 0.1);\n  }\n\n  @media all and (-ms-high-contrast: none) {\n    .country-row {\n      display: -ms-grid;\n      -ms-grid-template-columns: 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx,\n        34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx,\n        34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx,\n        34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx;\n      -ms-grid-template-rows: 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx,\n        34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx,\n        34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx, 34pxpx,\n        34pxpx;\n      -ms-grid-gap: 3px;\n    }\n  }\n\n  .country {\n    background-color: white;\n    /* margin: 1px; */\n    border: 1px solid white;\n  }\n\n  .unknown-country {\n    background-color: lightgrey;\n    /* margin: 1px; */\n    border: 1px solid white;\n  }\n\n  .selected {\n    border: 1px solid rgba(0, 0, 0, 0.1);\n  }\n</style>\n\n<div class=\"centered\">\n  <grid-container class=\"country-row\">\n    {#each tiles as country}\n      <grid-item\n        id={country.id}\n        on:click={el => selectCountry(el, country)}\n        on:click={() => (selected.name != '' && selected.filename != 'no image' ? (showModal = true) : (showModal = false))}\n        class=\"{selected === country ? 'selected' : 'not-selected'}\n        {country.filename !== 'no image' ? 'country' : 'unknown-country'}\">\n        <!-- {country.name} -->\n        {#if country.filename !== '' && country.filename !== 'no image'}\n          <img\n            src=\"./static/{country.filename}_thumb.png\"\n            alt={country.name}\n            style=\"width: 32px; height: 32px\" />\n        {/if}\n      </grid-item>\n    {/each}\n  </grid-container>\n</div>\n\n{#if showModal}\n  <Modal on:close={() => (showModal = false)}>\n    <h2 slot=\"header\">{selected.name}</h2>\n    <img\n      src=\"./static/{selected.filename}.png\"\n      alt=\"show your stripes image of {selected.country}\"\n      style=\"width: 100%\" />\n\n  </Modal>\n{/if}\n",
    "<script>\n  import { createEventDispatcher } from \"svelte\";\n\n  const dispatch = createEventDispatcher();\n\n  //   export let country;\n</script>\n\n<style>\n  .modal-background {\n    position: fixed;\n    top: 0;\n    left: 0;\n    width: 100%;\n    height: 100%;\n    background: rgba(0, 0, 0, 0.3);\n  }\n\n  .modal {\n    position: absolute;\n    left: 50%;\n    top: 50%;\n    width: calc(100vw - 4em);\n    max-width: 32em;\n    max-height: calc(100vh - 4em);\n    overflow: auto;\n    transform: translate(-50%, -50%);\n    padding: 1em;\n    border-radius: 0.2em;\n    background: white;\n  }\n\n  button {\n    display: block;\n  }\n</style>\n\n<div class=\"modal-background\" on:click={() => dispatch('close')} />\n\n<div class=\"modal\">\n  <slot name=\"header\" />\n  <slot />\n\n  <button on:click={() => dispatch('close')}>close modal</button>\n</div>\n"
  ],
  "names": [],
  "mappings": "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"
}